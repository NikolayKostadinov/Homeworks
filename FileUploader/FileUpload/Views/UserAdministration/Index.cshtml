@using FileUpload.Models.ViewModels;
@using Microsoft.AspNet.Identity.EntityFramework;

@model AccountViewModel

<h2>Администриране на потребители</h2>
@Html.AntiForgeryToken()
<input type="button" id="add_new_user" value="Add New User" onclick="add_new_user()" class="k-button k-button-icontext k-grid-edit" />

    @Html.Label("Test", new { id = "text-succes", @class = "text-success", style = "display: none" })
    @Html.Label("Test", new { id = "text-fail", @class = "text-danger", style = "display: none" })

@Html.ValidationSummary("", new { Id = "validation_summary", @class = "text-danger" })
@(Html.Kendo()
      .Grid<AccountViewModel>()
      .HtmlAttributes(new { style = "width:1200px" })
      .Name("users")
      .DataSource(data =>
      {
          data.Ajax()
              .Model(m => m.Id(u => u.Id))
              .PageSize(300)
              .Events(events => { events.Error("error_handler"); })
              .ServerOperation(true)
              .Read(read => read.Action("ReadAllUsers", "UserAdministration").Data("sendAntiForgery"))
              .Update(read => read.Action("UpdateUser", "UserAdministration").Data("sendAntiForgery"))
              .Destroy(read => read.Action("DeleteUser", "UserAdministration").Data("sendAntiForgery"));
               
      })
      .Columns(columns =>
      {
          columns.Bound(model => model.UserName).Width(250).Title("Потребителско име");
          columns.Bound(model => model.Email).Width(250).Title("e-mail");
          columns.Bound(model => model.PhoneNumber).Width(150).Title("Телефон за контакти");
          columns.Command(command => { command.Edit(); command.Destroy(); command.Custom("ResetPassword").Click("onResetPasswordClick");}).Width(240);
      })
      .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_EditAccount"))
      .Pageable()
      .Sortable()
      .Groupable()
      .Filterable()
      .Resizable(resize => resize.Columns(true))
      .Scrollable(scroll =>
      {
          scroll.Enabled(true);
          scroll.Height(500);
      })
      .ClientDetailTemplateId("template")
      .Reorderable(order =>
      {
          order.Columns(true);
      })
)

@(Html.Partial("_AddNewUser"))

<script id="template" type="text/kendo-tmpl">
    @(Html.Kendo()
          .Grid<IdentityRole>()
          .Name("user_#=Id#_roles")
          .Columns(columns =>
          {
              columns.Bound(r => r.Name).Width(110).Title("Role");
          })
          .DataSource(dataSource => dataSource.Ajax()
                                              .PageSize(10)
                                              .Read(read => read.Action("GetRolesByUser", "UserAdministration", new { userId = "#=Id#" }).Data("sendAntiForgery")))
          .Pageable()
          .Sortable()
          .ToClientTemplate()
    )
</script>

